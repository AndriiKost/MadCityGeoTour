{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/checklist/checklist.component.css","webpack:///./src/app/checklist/checklist.component.html","webpack:///./src/app/checklist/checklist.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/map/checkin/checkin.component.css","webpack:///./src/app/map/checkin/checkin.component.html","webpack:///./src/app/map/checkin/checkin.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/map/modal-window/modal-window.component.css","webpack:///./src/app/map/modal-window/modal-window.component.html","webpack:///./src/app/map/modal-window/modal-window.component.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/check-in.service.ts","webpack:///./src/app/services/geoObject.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/const/API.js","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<div>\\n  <router-outlet></router-outlet>\\n  <flash-messages></flash-messages>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes, Router } from '@angular/router';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { GOOGLE_MAPS_API } from '../const/API.js';\nimport { AgmCoreModule } from '@agm/core';\nimport { MapComponent } from './map/map.component';\nimport { ModalWindowComponent } from './map/modal-window/modal-window.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { CheckinComponent } from './map/checkin/checkin.component';\nimport { CheckInService } from './services/check-in.service';\nimport { GeoObjectService } from './services/geoObject.service';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ChecklistComponent } from './checklist/checklist.component';\n\nconst appRoutes: Routes = [\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'checklist', component: ChecklistComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    ModalWindowComponent,\n    NavigationComponent,\n    CheckinComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    ChecklistComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    NgxSpinnerModule,\n    FormsModule,\n    AgmCoreModule.forRoot({\n      apiKey: GOOGLE_MAPS_API\n    })\n  ],\n  providers: [\n    CheckInService,\n    GeoObjectService,\n    ValidateService,\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".checklist-container {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1fr 1fr;\\n      grid-template-columns: 1fr 1fr;\\n}\\n.checklist-item {\\n  margin: 10px;\\n  padding: 10px;\\n  border-left: 1px solid rgb(138, 17, 137);\\n  border-bottom: 1px solid rgb(138, 17, 137);\\n  border-radius: 5px;\\n}\\n.header h2 {\\n  color: darkred;\\n  text-transform: uppercase;\\n  font-weight: 300;\\n  text-align: center;\\n  padding: 1em;\\n}\\n.toCheck {\\n\\n}\\n.checked {\\n  cursor: not-allowed;\\n  color: rgb(185, 184, 184);\\n  background: rgba(69, 3, 59, 0.5);\\n}\\nh4 {\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  letter-spacing: 0.1em;\\n}\\n\"","module.exports = \"<div class=\\\"header\\\">\\n    <h2>To Check</h2>\\n</div>\\n<div class=\\\"checklist-container\\\">\\n  <div class=\\\"checklist-item\\\" *ngFor=\\\"let object of userGeoObjects\\\" [ngClass]=\\\"!object.visited ? 'toCheck' : 'checked'\\\">\\n    <!-- <div class=\\\"checklist-content\\\" *ngIf=\\\"!object.visited\\\"> -->\\n    <div class=\\\"checklist-content\\\">\\n      <h4>{{object.name}}</h4>\\n      <p>{{object.address}}</p>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { GeoObject } from '../models/GeoObject.model';\n\n@Component({\n  selector: 'app-checklist',\n  templateUrl: './checklist.component.html',\n  styleUrls: ['./checklist.component.css']\n})\nexport class ChecklistComponent implements OnInit {\n  userGeoObjects: GeoObject[];\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.getUserObjects();\n  }\n\n  getUserObjects() {\n    this.authService.getProfile().subscribe(profile => {\n      // Filter User Personalized Objects by visited: bool property\n      // this.userGeoObjects = profile.user.geoObjects.filter(object => {\n      //   if (!object.visited) {\n      //     return object;\n      //   }\n      // });\n      this.userGeoObjects = profile.user.geoObjects;\n    },\n    err => {\n      console.log(err);\n      return false;\n    }\n  );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n  </div>\\n  <div>\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000});\n        this.router.navigate(['map']);\n      } else {\n        this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n","module.exports = \".check-in {\\n  position: relative;\\n  bottom: 0;\\n  right:0;\\n  left:0;\\n  top: 0;\\n  background: \\trgb(139,0,139);\\n  color: white;\\n  text-align: center;\\n  padding: 10px;\\n  text-transform: uppercase;\\n  font-size: 1.5em;\\n}\\n.check-in:hover {\\n  cursor: pointer;\\n  background: rgb(75,0,130);\\n}\\n\"","module.exports = \"<div class=\\\"check-in\\\" (click)=\\\"handleCheckInClick()\\\">\\n  Check in\\n</div>\\n<!-- <button (click)=\\\"testHandleClick()\\\">CHANGE LOCATION CHICAGO</button> -->\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CheckInService } from 'src/app/services/check-in.service';\nimport { GeoObject } from 'src/app/models/GeoObject.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-checkin',\n  templateUrl: './checkin.component.html',\n  styleUrls: ['./checkin.component.css']\n})\nexport class CheckinComponent implements OnInit {\n  @Input() currentLongtitude: number;\n  @Input() currentLatitude: number;\n  @Output() handleCoordinatesChange = new EventEmitter();\n  // Main geo objects array\n  @Input() geoObjects: GeoObject[];\n  @Output() handleGeoObjectChange = new EventEmitter();\n  // Send notification to map component\n  @Output() handleNotification = new EventEmitter();\n\n  constructor(\n    private checkInService: CheckInService,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit() {\n  }\n\n  handleCheckInClick () {\n    this.spinner.show();\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.currentLatitude = position.coords.latitude;\n      this.currentLongtitude = position.coords.longitude;\n      this.handleCoordinatesChange.emit([this.currentLatitude, this.currentLongtitude]);\n      this.performGeolocationCheckIn();\n    });\n  }\n\n  performGeolocationCheckIn() {\n    // Instance of all objects\n    const geoObjectsForCheckin = this.geoObjects;\n    // Closest object\n    let closestObject;\n    // Closest object distance\n    let closestObjectDistance: number;\n    // Final closest object\n    geoObjectsForCheckin.map(cur => {\n      // Assign current object to be the closest if it's undefined\n      if (closestObject === undefined) {\n        closestObject = cur;\n      }\n      // calculate the distance between object and a user and store it in const\n      const distanceBetweenObjectAndUser = this.checkInService\n                      .calculateDistance(this.currentLatitude, this.currentLongtitude, cur.coords.latitude, cur.coords.longitude);\n      // Assign current distance if previous is unavaiable\n      if (closestObjectDistance === undefined) {\n        closestObjectDistance = distanceBetweenObjectAndUser;\n      }\n      console.log('distanceBetweenObjectAndUser ==> ', distanceBetweenObjectAndUser);\n      // Check if current distance is lower then previous\n      if (closestObjectDistance > distanceBetweenObjectAndUser) {\n        closestObjectDistance = distanceBetweenObjectAndUser;\n        closestObject = cur;\n      }\n    });\n    console.log('closestObject ==> ', closestObject);\n    console.log('closestObjectDistance ==> ', closestObjectDistance);\n\n    // Check if distance between object and user is less or equal then 40 feet\n    if (closestObjectDistance <= 40) {\n      // Build notification\n      this.checkInService.handleCheckIn(closestObject);\n      const notification: string = 'WOOOHOOHOOO you found  ==> ' + closestObject.name + ' on the ' + closestObject.address;\n      this.handleNotification.emit(notification);\n      this.spinner.hide();\n    } else {\n      // Build notification\n      const notification: string = 'Cant find any objects around you. Please move closer.';\n      this.handleNotification.emit(notification);\n      this.spinner.hide();\n    }\n  }\n\n}\n","module.exports = \"agm-map {\\n  height: 90vh;\\n}\\n\"","module.exports = \"<div class=\\\"map-container\\\">\\n  <app-modal-window\\n    *ngIf=\\\"modalWindow\\\"\\n    (closeModal)=\\\"receiveCloseModal($event)\\\"\\n    [notification]=\\\"notification\\\"\\n    [geoObject]=\\\"currentObject\\\"></app-modal-window>\\n  <agm-map [latitude]=\\\"currentLatitude\\\" [longitude]=\\\"currentLongtitude\\\">\\n    <agm-marker *ngFor=\\\"let object of userGeoObjects\\\"\\n      [latitude]=\\\"object.coords.latitude\\\"\\n      [longitude]=\\\"object.coords.longitude\\\"\\n      [id]=\\\"object.id\\\"\\n      (markerClick)=\\\"handleMarkerClick($event)\\\">\\n    </agm-marker>\\n  </agm-map>\\n  <app-checkin\\n  *ngIf=\\\"currentLatitude && currentLongtitude && userGeoObjects\\\"\\n  [(geoObjects)]=\\\"userGeoObjects\\\"\\n  [(currentLatitude)]=\\\"currentLatitude\\\"\\n  [(currentLongtitude)]=\\\"currentLongtitude\\\"\\n  (handleCoordinatesChange)=\\\"changed($event)\\\"\\n  (handleNotification)=\\\"notificationChanged($event)\\\"></app-checkin>\\n</div>\\n<ngx-spinner\\nbdColor = \\\"rgba(1,51,51,0.8)\\\"\\nsize = \\\"large\\\"\\ncolor = \\\"#FADA5E\\\"\\ntype = \\\"pacman\\\"\\n></ngx-spinner>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GeoObject } from '../models/GeoObject.model';\nimport { GeoObjectService } from '../services/geoObject.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  // Use from navigator\n  currentLatitude: number;\n  currentLongtitude: number;\n  // Main geo objects\n  userGeoObjects: GeoObject[];\n  // Use for Modal window\n  currentObject: GeoObject;\n  modalWindow = false;\n  notification: string;\n\n  constructor(\n    public geoObjectService: GeoObjectService,\n    private spinner: NgxSpinnerService,\n    private authService: AuthService\n    ) { }\n\n  ngOnInit() {\n    // Show spinner the first thing\n    this.spinner.show();\n    this.getUserObjects();\n\n    this.defineCoords();\n  }\n\n  changed(newValue) {\n    console.log('newValue', newValue);\n    this.currentLatitude = newValue[0];\n    this.currentLongtitude = newValue[1];\n  }\n\n  getUserObjects() {\n    this.authService.getProfile().subscribe(profile => {\n      // Filter User Personalized Objects by visited: bool property\n      this.userGeoObjects = profile.user.geoObjects.filter(object => {\n        if (!object.visited) {\n          return object;\n        }\n      });\n      console.log('AFTER FILTER ===> ', this.userGeoObjects);\n    },\n    err => {\n      console.log(err);\n      return false;\n    }\n  );\n  }\n\n  defineCoords() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.currentLatitude = position.coords.latitude;\n      this.currentLongtitude = position.coords.longitude;\n      console.log(this.userGeoObjects, this.currentLatitude, this.currentLongtitude);\n      // Hide spinner after getting coordinates\n      this.spinner.hide();\n    });\n  }\n\n  notificationChanged(event) {\n    // Set notification\n    this.notification = event;\n    // Open modal window\n    if (this.modalWindow === true) {\n      return;\n    } else if (this.notification !== '') {\n      this.modalWindow = true;\n    }\n  }\n\n  handleMarkerClick(event) {\n    const id = event._id;\n    this.currentObject = this.userGeoObjects[id];\n\n    if (this.modalWindow === true) {\n      return;\n    } else {\n      this.modalWindow = true;\n    }\n  }\n\n  receiveCloseModal($event) {\n    this.modalWindow = false;\n    this.notification = '';\n    this.currentObject = undefined;\n    this.getUserObjects();\n    console.log(this.userGeoObjects);\n  }\n\n}\n","module.exports = \".modal-window {\\n  z-index: 10;\\n  position:fixed;\\n  padding:0;\\n  margin:0;\\n\\n  top:0;\\n  left:0;\\n\\n  width: 100%;\\n  height: 100%;\\n  background:rgba(255,255,255,0.8);\\n}\\n.modal-content {\\n  max-width: 75%;\\n  margin: 100px auto 0 auto;\\n  padding: 25px;\\n  background: #fff;\\n  border: 1px solid rgb(195,68,75);\\n}\\n.btn-warning {\\n  background: rgb(195,68,75);\\n  color: #fff;\\n  margin: 0 auto;\\n  padding: 15px;\\n  border-radius: 3px;\\n  border: 1px solid rgb(133, 39, 44);\\n  font-size: 1.2em;\\n  text-transform: lowercase;\\n}\\n.btn-warning:hover {\\n  background: rgb(133, 39, 44);\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<div class=\\\"modal-window\\\">\\n  <div class=\\\"modal-content\\\">\\n    <h3>{{ geoObject?.name }}</h3>\\n    <h3 *ngIf=\\\"notification !== ''\\\">{{ notification }}</h3>\\n    <p><a href=\\\"#\\\">{{ geoObject?.address }}</a></p>\\n    <button class=\\\"btn-warning\\\" (click)=\\\"close()\\\">Close</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { GeoObject } from 'src/app/models/GeoObject.model';\n\n@Component({\n  selector: 'app-modal-window',\n  templateUrl: './modal-window.component.html',\n  styleUrls: ['./modal-window.component.css']\n})\nexport class ModalWindowComponent implements OnInit {\n  @Output() closeModal = new EventEmitter<boolean>();\n  @Input() geoObject: GeoObject;\n  @Input() notification:string;\n\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  close() {\n    this.closeModal.emit(false);\n  }\n\n}\n","module.exports = \".nav-menu{\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  padding: 15px;\\n  background: #fff;\\n  z-index: 20;\\n}\\n\\n.container {\\n  display: inline-block;\\n  cursor: pointer;\\n}\\n\\n.menu-content .container {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  padding: 15px 15px 0 0;\\n  z-index: 20;\\n}\\n\\n.bar1, .bar2, .bar3 {\\n  width: 35px;\\n  height: 5px;\\n  background-color: #333;\\n  margin: 6px 0;\\n  transition: 0.4s;\\n}\\n\\n/* Rotate first bar */\\n\\n.change .bar1 {\\n  -webkit-transform: rotate(-45deg) translate(-9px, 6px) ;\\n  transform: rotate(-45deg) translate(-9px, 6px) ;\\n}\\n\\n/* Fade out the second bar */\\n\\n.change .bar2 {\\n  opacity: 0;\\n}\\n\\n/* Rotate last bar */\\n\\n.change .bar3 {\\n  -webkit-transform: rotate(45deg) translate(-8px, -8px) ;\\n  transform: rotate(45deg) translate(-8px, -8px) ;\\n}\\n\\n/* MENU CONTENT */\\n\\n.menu-content {\\n  background: #fff;\\n  width: 28vh;\\n  height: 100vh;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  border-left: 1px solid #000;\\n}\\n\\n.menu-list {\\n  margin-top: 80px;\\n}\\n\\n.menu-list ul {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.menu-list li {\\n  list-style: none;\\n  padding: 10px 15px;\\n  font-size: 1.2em;\\n  text-transform: uppercase;\\n}\\n\\n.menu-list li:hover {\\n  cursor: pointer;\\n  background: #eee;\\n}\\n\"","module.exports = \"<div class=\\\"nav-menu\\\">\\n    <div class=\\\"container\\\" (click)=\\\"changeStyleClass()\\\" [ngClass]=\\\"status ? 'change' : null\\\">\\n        <div class=\\\"bar1\\\"></div>\\n        <div class=\\\"bar2\\\"></div>\\n        <div class=\\\"bar3\\\"></div>\\n      </div>\\n    <div *ngIf=\\\"status\\\" class=\\\"menu-content\\\">\\n        <div class=\\\"container\\\" (click)=\\\"changeStyleClass()\\\" [ngClass]=\\\"status ? 'change' : null\\\">\\n            <div class=\\\"bar1\\\"></div>\\n            <div class=\\\"bar2\\\"></div>\\n            <div class=\\\"bar3\\\"></div>\\n          </div>\\n          <div class=\\\"menu-list\\\">\\n            <ul>\\n              <li *ngIf=\\\"authService.loggedIn()\\\"\\n                [routerLink]=\\\"['/profile']\\\"\\n                [routerLinkActive]=\\\"['active']\\\"\\n                [routerLinkActiveOptions]=\\\"{exact:true}\\\">Profile</li>\\n              <li *ngIf=\\\"authService.loggedIn()\\\"\\n                [routerLink]=\\\"['/checklist']\\\"\\n                [routerLinkActive]=\\\"['active']\\\"\\n                [routerLinkActiveOptions]=\\\"{exact:true}\\\">Checklist</li>\\n              <li *ngIf=\\\"authService.loggedIn()\\\"\\n                [routerLink]=\\\"['/map']\\\"\\n                [routerLinkActive]=\\\"['active']\\\"\\n                [routerLinkActiveOptions]=\\\"{exact:true}\\\">Map</li>\\n              <li>Rules</li>\\n              <li *ngIf=\\\"!authService.loggedIn()\\\"\\n                [routerLink]=\\\"['/register']\\\"\\n                [routerLinkActive]=\\\"['active']\\\"\\n                [routerLinkActiveOptions]=\\\"{exact:true}\\\">Register</li>\\n              <li *ngIf=\\\"!authService.loggedIn()\\\"\\n                [routerLink]=\\\"['/login']\\\"\\n                [routerLinkActive]=\\\"['active']\\\"\\n                [routerLinkActiveOptions]=\\\"{exact:true}\\\">Login</li>\\n                <li *ngIf=\\\"authService.loggedIn()\\\"\\n                (click)=\\\"onLogoutClick()\\\">Logout</li>\\n            </ul>\\n          </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  status = false;\n\n  constructor(\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  changeStyleClass() {\n    this.status = !this.status;\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","module.exports = \".header h2 {\\n  color: darkred;\\n  text-transform: uppercase;\\n  font-weight: 300;\\n  text-align: center;\\n  padding: 1em;\\n}\\n.user-section h2 {\\n  text-transform: capitalize;\\n}\\n.user-section span {\\n  color: rgb(138, 17, 137);\\n}\\n.user-settings {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1fr 1fr;\\n      grid-template-columns: 1fr 1fr;\\n}\\n.username , .email {\\n  padding-top: 1em;\\n  -ms-grid-column-align: center;\\n      justify-self: center;\\n  border: 1px solid #eee;\\n  width: 75%;\\n  text-align: center;\\n  font-weight: 300;\\n}\\n.action-btn {\\n  padding: 15px;\\n  font-size: 1em;\\n  border-radius: 5px;\\n}\\n.action-btn:hover {\\n  cursor: pointer;\\n  color: #fff;\\n  background: rgb(138, 17, 137);\\n}\\n\"","module.exports = \"<div class=\\\"header\\\">\\n    <h2>Profile</h2>\\n</div>\\n\\n<div *ngIf=\\\"user\\\" class=\\\"user-section\\\">\\n    <h2 class=\\\"page-header\\\">Hello, <span>{{user.name}}</span></h2>\\n    <div class=\\\"user-settings\\\">\\n      <div class=\\\"username\\\">\\n          <h4>Username: {{user.username}}</h4>\\n          <button class=\\\"action-btn\\\">Change Username</button>\\n      </div>\\n      <div class=\\\"email\\\">\\n          <h4>Email: {{user.email}}</h4>\\n          <button class=\\\"action-btn\\\">Change Email</button>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    }\n  );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label>Username</label>\\n      <input [(ngModel)]=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input [(ngModel)]=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label>Password</label>\\n          <input [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\n      </div>\\n      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\nimport { ValidateService } from '../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { GeoObjectService } from '../services/geoObject.service';\nimport { GeoObject } from '../models/GeoObject.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  geoObjectsForUser: GeoObject[];\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router,\n    private geoObjectService: GeoObjectService\n  ) { }\n\n  ngOnInit() {\n    this.getObjects();\n  }\n\n  getObjects() {\n    this.geoObjectService.getAllObjects().subscribe(\n      objects => {\n        this.geoObjectsForUser = objects;\n        console.log(objects);\n      }\n    );\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      geoObjects: this.geoObjectsForUser\n    };\n    console.log(user);\n    // Required fields\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n    // Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if (data.success) {\n        this.flashMessage.show('Congratulations! You are now registered.', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show('Ooops! Something went wrong...', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport { GeoObject } from '../models/GeoObject.model';\n\n// const url = 'http://localhost:8000/';\nconst url = 'https://madcitygeotour.herokuapp.com/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(\n    private http: Http\n    ) { }\n\n  registerUser(user) {\n    console.log('REGISTER AUTH USER => ', user);\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(url + 'users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(url + 'users/authenticate', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile() {\n    const headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(url + 'users/profile', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  tagGeoObject(object: GeoObject, profileID) {\n    const headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n\n    const newGeoObject = object;\n    newGeoObject.visited = true;\n\n    return this.http.get(url + 'users/' + profileID + '/geotag/' + object.id, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  // Check if user logged in (if token is not expired)\n  loggedIn() {\n    return tokenNotExpired('id_token');\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { GeoObject } from '../models/GeoObject.model';\nimport { AuthService } from './auth.service';\n\n// const url = 'http://localhost:8000/users/';\nconst url = 'https://madcitygeotour.herokuapp.com/users/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckInService {\n\n  constructor(\n    private http: Http,\n    private authService: AuthService\n    ) {  }\n\n  calculateDistance(latitude, longtitude, objLat, objLon) {\n    const R = 6378.137; // Radius of earth in KM\n    const dLat = objLat * Math.PI / 180 - latitude * Math.PI / 180;\n    const dLon = objLon * Math.PI / 180 - longtitude * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(latitude * Math.PI / 180) * Math.cos(objLat * Math.PI / 180) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const d = R * c;\n    return Math.round((d * 1000 * 3.2808));\n}\n\nhandleCheckIn(object: GeoObject) {\n  this.authService.getProfile().subscribe(profile => {\n    this.authService.tagGeoObject(object, profile.user._id).subscribe(data => {\n      console.log('handleCheckIn => ', data);\n    });\n  },\n  err => {\n    console.log(err);\n    return false;\n  }\n);\n}\n\n// tagGeoObject(object: GeoObject, profileID) {\n//   const headers = new Headers();\n//   this.authService.loadToken();\n//   headers.append('Authorization', this.authService.authToken);\n//   headers.append('Content-Type', 'application/json');\n\n//   const newGeoObject = object;\n//   newGeoObject.visited = true;\n\n//   this.http.get(url + profileID + '/geotag/' + object.id, {headers: headers})\n//   .subscribe(response => {\n//     console.log('RESPONSE FROM HTTP =>', response);\n//   });\n\n// }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { GeoObject } from '../models/GeoObject.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeoObjectService {\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n  getUserObjects(): Observable<GeoObject[]> {\n    // const url ='http://localhost:8000/profile';\n    const url = 'https://madcitygeotour.herokuapp.com/profile';\n\n    return this.http.get<GeoObject[]>(url)\n    .pipe(\n      catchError(this.handleError('getUserObjects', []))\n    );\n\n  }\n\n  getAllObjects(): Observable<GeoObject[]> {\n    // const url = 'http://localhost:8000/geo-objects/';\n    const url = 'https://madcitygeotour.herokuapp.com/geo-objects/';\n\n    return this.http.get<GeoObject[]>(url)\n              .pipe(\n                catchError(this.handleError('getAllObjects', []))\n              );\n  }\n\n  // Handle Errors\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name === undefined || user.email === undefined || user.username === undefined || user.password === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n}\n","export const GOOGLE_MAPS_API = 'AIzaSyDsq1nyutN_hjPBdbl6kfhrOJD-TxasmlM';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}